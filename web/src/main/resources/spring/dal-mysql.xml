<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
       					http://www.springframework.org/schema/context/spring-context.xsd
       					http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- ================================== 引入配置文件 ====================================== -->
    <context:property-placeholder
            location="classpath*:properties/dal.mysql.properties"
            ignore-unresolvable="true"/>

    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START DataSource定义 配置 >>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
    <!-- ================================== proxyFilters ====================================== -->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="${mysql.database.slowsql.time}"/>
        <property name="logSlowSql" value="true"/>
    </bean>

    <!-- ================================== 数据源bean ====================================== -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${mysql.database.driver}"/>
        <property name="url" value="${mysql.database.url}"/>
        <property name="username" value="${mysql.database.username}"/>
        <property name="password" value="${mysql.database.password}"/>
        <property name="defaultAutoCommit" value="false"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${mysql.database.initialSize}"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="${mysql.database.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 配置连接超时 5s -->
        <property name="loginTimeout" value="5"/>
        <!-- 配置查询超时 300s -->
        <property name="queryTimeout" value="300"/>

        <!--<property name="validationQuery" value="SELECT 'x'" /> -->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat,slf4j"/>

        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
            </list>
        </property>
    </bean>
    <!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< END DataSource定义 配置 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->


    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START DAO定义 配置 >>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation"
                  value="classpath:mybatis/springmvc-mysql-sqlmap-config.xml"/>
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>
        <property name="typeAliasesPackage" value="cn.pomelo.dal.mysql.object"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.pomelo.dal.mysql.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< END DAO定义 配置 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->


    <!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> START 事务 配置 >>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <aop:config>
        <aop:pointcut id="defaultServiceOperation"
                      expression="execution(* cn.pomelo.biz.service.impl.*ServiceImpl.*(..))"/>
        <aop:advisor pointcut-ref="defaultServiceOperation" advice-ref="defaultTxAdvice"/>
    </aop:config>

    <tx:advice id="defaultTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="inert*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="add*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="save*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="update*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="delete*" rollback-for="Exception" propagation="REQUIRED"/>
            <tx:method name="reset*" rollback-for="Exception" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< END 事务 配置 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< -->

</beans>
