#!/bin/bash

DATE=`date +%Y-%m-%d`
OS=`uname`

start()
{
    if [ -f "$APP_DEPLOY_HOME/tomcat/tomcat.pid" ]; then
        echo "warn: App is already run, please check."
        exit;
    fi

    STR=`netstat -an | grep "$APP_PORT" | grep LISTEN`
    if [ ! -z "$STR" ]; then
        echo "warn: Tomcat port is already used, please check."
        exit;
    fi

    if [ ! -d "$APP_OUTPUT/logs" ]; then
        mkdir -p $APP_OUTPUT/logs
    fi

    $TOMCAT_HOME/bin/startup.sh  >$TOMCAT_LOG 2>&1 &
    starthttpd
}

stop()
{
	if [ ! -f "$APP_DEPLOY_HOME/tomcat/tomcat.pid" ]; then
		echo "App process is not exist!"
		exit 1;
	fi
	
  	if [ ! -d "$APP_OUTPUT/logs" ]; then
        mkdir -p $APP_OUTPUT/logs
    fi
    
    #$TOMCAT_HOME/bin/shutdown.sh  >$TOMCAT_LOG 2>&1 &
       
    TIMESTAMP=`date +%Y_%m_%d_%H:%M`
    KILL_LOG=$APP_OUTPUT/logs/kill.log

    echo "`hostname` was stopted at $TIMESTAMP" >>$KILL_LOG

	pid=`cat $APP_DEPLOY_HOME/tomcat/tomcat.pid`
	kill -9 $pid
	sleep 5
    str=`ps -p $pid|grep $pid`
	if [ -z "$str" ]; then
		echo "APP $pid Shutdown is ok!"
		rm -f $APP_DEPLOY_HOME/tomcat/tomcat.pid
	else
	    echo "APP $pid Shutdown is failed!"
	    echo "Please kill pid $pid manually ,and romove file $APP_DEPLOY_HOME/tomcat/tomcat.pid"
	fi
}

starthttpd()
{
    STARTTIME=`date +"%s"`
    COUNT=0
    sleep 5
    while true
    do
        RESULT=`curl --connect-timeout 1 -s $CHECK_STARTUP_URL`
        ENDTIME=`date +"%s"`
        COSTTIME=$(($ENDTIME - $STARTTIME))

        if [ -z "$RESULT" ]; then
            sleep 1
            echo -n -e "\rWait Tomcat Start: $COSTTIME seconds"
            continue
        fi

        COUNT=`echo $RESULT | grep -c -i OK`
        if [ $COUNT -ge 1 ]; then
        	pid=`cat $APP_DEPLOY_HOME/tomcat/tomcat.pid`
            echo "APP $pid Start in $COSTTIME seconds."
            return
        else
            echo "ERROR: Start APP Failed!!!"
            exit
        fi
    done
}

usage() {
    echo "Usage: xxx {start|stop|restart}"
    exit 1;
 }


case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        sleep 5
        start
    ;;
    *)
     echo $ACTION
        usage
    ;;
esac
